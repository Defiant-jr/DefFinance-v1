import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/ui/toast.jsx");import __vite__cjsImport0_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=b50a5041"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import * as RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.$RefreshReg$) {
    throw new Error(
      "@vitejs/plugin-react can't detect preamble. Something is wrong."
    );
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx");
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
import { cn } from "/src/lib/utils.js";
import * as ToastPrimitives from "/node_modules/.vite/deps/@radix-ui_react-toast.js?v=b50a5041";
import { cva } from "/node_modules/.vite/deps/class-variance-authority.js?v=b50a5041";
import { X } from "/node_modules/.vite/deps/lucide-react.js?v=b50a5041";
import __vite__cjsImport7_react from "/node_modules/.vite/deps/react.js?v=b50a5041"; const React = __vite__cjsImport7_react.__esModule ? __vite__cjsImport7_react.default : __vite__cjsImport7_react;
const ToastProvider = ToastPrimitives.Provider;
const ToastViewport = React.forwardRef(
  _c = ({ className, ...props }, ref) => /* @__PURE__ */ jsxDEV(
    ToastPrimitives.Viewport,
    {
      ref,
      className: cn(
        "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
        className
      ),
      ...props
    },
    void 0,
    false,
    {
      fileName: "D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx",
      lineNumber: 29,
      columnNumber: 1
    },
    this
  )
);
_c2 = ToastViewport;
ToastViewport.displayName = ToastPrimitives.Viewport.displayName;
const toastVariants = cva(
  "data-[swipe=move]:transition-none group relative pointer-events-auto flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full data-[state=closed]:slide-out-to-right-full",
  {
    variants: {
      variant: {
        default: "bg-background border",
        destructive: "group destructive border-destructive bg-destructive text-destructive-foreground"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
);
const Toast = React.forwardRef(_c3 = ({ className, variant, ...props }, ref) => {
  return /* @__PURE__ */ jsxDEV(
    ToastPrimitives.Root,
    {
      ref,
      className: cn(toastVariants({ variant }), className),
      ...props
    },
    void 0,
    false,
    {
      fileName: "D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx",
      lineNumber: 58,
      columnNumber: 5
    },
    this
  );
});
_c4 = Toast;
Toast.displayName = ToastPrimitives.Root.displayName;
const ToastAction = React.forwardRef(
  _c5 = ({ className, ...props }, ref) => /* @__PURE__ */ jsxDEV(
    ToastPrimitives.Action,
    {
      ref,
      className: cn(
        "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-destructive/30 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
        className
      ),
      ...props
    },
    void 0,
    false,
    {
      fileName: "D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx",
      lineNumber: 68,
      columnNumber: 1
    },
    this
  )
);
_c6 = ToastAction;
ToastAction.displayName = ToastPrimitives.Action.displayName;
const ToastClose = React.forwardRef(
  _c7 = ({ className, ...props }, ref) => /* @__PURE__ */ jsxDEV(
    ToastPrimitives.Close,
    {
      ref,
      className: cn(
        "absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
        className
      ),
      "toast-close": "",
      ...props,
      children: /* @__PURE__ */ jsxDEV(X, { className: "h-4 w-4" }, void 0, false, {
        fileName: "D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx",
        lineNumber: 89,
        columnNumber: 3
      }, this)
    },
    void 0,
    false,
    {
      fileName: "D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx",
      lineNumber: 80,
      columnNumber: 1
    },
    this
  )
);
_c8 = ToastClose;
ToastClose.displayName = ToastPrimitives.Close.displayName;
const ToastTitle = React.forwardRef(
  _c9 = ({ className, ...props }, ref) => /* @__PURE__ */ jsxDEV(
    ToastPrimitives.Title,
    {
      ref,
      className: cn("text-sm font-semibold", className),
      ...props
    },
    void 0,
    false,
    {
      fileName: "D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx",
      lineNumber: 95,
      columnNumber: 1
    },
    this
  )
);
_c0 = ToastTitle;
ToastTitle.displayName = ToastPrimitives.Title.displayName;
const ToastDescription = React.forwardRef(
  _c1 = ({ className, ...props }, ref) => /* @__PURE__ */ jsxDEV(
    ToastPrimitives.Description,
    {
      ref,
      className: cn("text-sm opacity-90", className),
      ...props
    },
    void 0,
    false,
    {
      fileName: "D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx",
      lineNumber: 104,
      columnNumber: 1
    },
    this
  )
);
_c10 = ToastDescription;
ToastDescription.displayName = ToastPrimitives.Description.displayName;
export {
  Toast,
  ToastAction,
  ToastClose,
  ToastDescription,
  ToastProvider,
  ToastTitle,
  ToastViewport
};
var _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10;
$RefreshReg$(_c, "ToastViewport$React.forwardRef");
$RefreshReg$(_c2, "ToastViewport");
$RefreshReg$(_c3, "Toast$React.forwardRef");
$RefreshReg$(_c4, "Toast");
$RefreshReg$(_c5, "ToastAction$React.forwardRef");
$RefreshReg$(_c6, "ToastAction");
$RefreshReg$(_c7, "ToastClose$React.forwardRef");
$RefreshReg$(_c8, "ToastClose");
$RefreshReg$(_c9, "ToastTitle$React.forwardRef");
$RefreshReg$(_c0, "ToastTitle");
$RefreshReg$(_c1, "ToastDescription$React.forwardRef");
$RefreshReg$(_c10, "ToastDescription");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports)
        return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/Users/defia/Documents/Desenvolvimento/DefFinance-v1/src/components/ui/toast.jsx", currentExports, nextExports);
      if (invalidateMessage)
        import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,